---
- name: Gather job data and template data from API and write to CSV
  hosts: localhost
  gather_facts: no
  vars:
    headers:
      Authorization: "{{ bearer_token }}"
  tasks:
    - name: Fetch template data
      uri:
        url: "{{ base_url }}{{ template_api_url }}"
        headers: "{{ headers }}"
        method: GET
        return_content: yes
        status_code: 200
        validate_certs: no
      register: template_data_response

    - name: Propagate total records
      ansible.builtin.set_fact:
        template_total_records: "{{ template_data_response.json.count }}"
    
    - name: print total records
      ansible.builtin.debug:
        msg: "Total Template records: {{ template_total_records }}"
    
    - name: calculate total pages
      ansible.builtin.set_fact:
        temporary_template_total_pages: "{{ (template_total_records | int) / (records_per_page | int) }}"
    
    - name: print total records
      ansible.builtin.debug:
        msg: "Original Total Templates Pages: {{ temporary_template_total_pages }}"
    
    - name: Round up the decimal number
      ansible.builtin.set_fact:
        template_total_pages: "{{ (temporary_template_total_pages | float) | round(0, 'ceil') | int }}"

    - name: print total Pages
      ansible.builtin.debug:
        msg: "Total Rounded Templates Pages: {{ template_total_pages }}"

    - name: Loop a task based on a number
      uri:
        url: "{{ base_url }}{{ template_api_url }}?page={{ item }}"
        headers: "{{ headers }}"
        method: GET
        return_content: yes
        status_code: 200
        validate_certs: no
      loop: "{{ range(1, template_total_pages + 1) }}"
      register: api_responses

    - name: Display API responses
      debug:
        msg: "Response for page {{ item.item }}: {{ item.content }}"
      loop: "{{ api_responses.results }}"

    # - name: Setting booleans using complex argument style
    #   ansible.builtin.set_fact:
    #     template_url_next: "{{ template_data_response.json.get('next', None) if template_data_response.json is defined else None }}"

    # - name: Print next url
    #   ansible.builtin.debug:
    #     msg: "Next Template Url: {{ template_url_next }}"

    # - name: Include Task file
    #   ansible.builtin.import_tasks:
    #     file: tasks/02.task-fetch-templates.yml
    #   when: template_url_next is defined and template_url_next != None